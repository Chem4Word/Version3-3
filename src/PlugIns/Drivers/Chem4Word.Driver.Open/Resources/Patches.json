[
  {
    "version": "3.2.1",
    "scripts": [
      "CREATE TABLE Patches (Version STRING NOT NULL PRIMARY KEY, Applied STRING NOT NULL);",
      "DROP VIEW GetUserTags;",
      "DROP VIEW GetAllChemistryWithTags;",
      "DROP VIEW UserTag;",
      "DROP TABLE UserTags;"
    ]
  },
  {
    "version": "3.2.2",
    "scripts": [
      "CREATE TABLE Tags (Id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, Tag STRING NOT NULL UNIQUE);"
    ]
  },
  {
    "version": "3.2.3",
    "scripts": [
      "DROP TABLE ChemistryByTags;",
      "CREATE TABLE TaggedChemistry (Id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, ChemistryId INTEGER NOT NULL, TagId INTEGER NOT NULL, FOREIGN KEY (ChemistryId) REFERENCES Gallery (Id), FOREIGN KEY (TagId) REFERENCES Tags (Id));"
    ]
  },
  {
    "version": "3.2.4",
    "scripts": [
      "DROP TABLE TaggedChemistry;",
      "CREATE TABLE TaggedChemistry (ChemistryId INTEGER NOT NULL, TagId INTEGER NOT NULL, Sequence INTEGER NOT NULL, FOREIGN KEY (ChemistryId) REFERENCES Gallery (Id), FOREIGN KEY (TagId) REFERENCES Tags (Id));"
    ]
  },
  {
    "version": "3.3.0",
    "scripts": [
      "ALTER TABLE Gallery ADD COLUMN MolWeight DECIMAL;",
      "ALTER TABLE Gallery ADD COLUMN DataType STRING;",
      "UPDATE Gallery SET DataType = 'cml'",
      "CREATE TABLE Properties ([Key] STRING PRIMARY KEY NOT NULL, Value STRING NOT NULL);",
      "INSERT INTO Properties (Key, Value) VALUES ('Owner', 'User');",
      "CREATE TABLE ChemicalFormulae (Id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, Name TEXT NOT NULL, Namespace TEXT NOT NULL, Tag TEXT NOT NULL, ChemistryID INTEGER NOT NULL, FOREIGN KEY (ChemistryID) REFERENCES Gallery (Id), CONSTRAINT PK_ChemicalFormulae);",
      "CREATE TABLE ChemicalCaptions (Id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, Name TEXT NOT NULL, Namespace TEXT NOT NULL, Tag TEXT NOT NULL, ChemistryID INTEGER NOT NULL, FOREIGN KEY (ChemistryID) REFERENCES Gallery (Id), CONSTRAINT PK_ChemicalCaptions);",
      "DELETE FROM ChemicalNames WHERE ChemistryId NOT IN (SELECT Id FROM Gallery)",
      "ALTER TABLE ChemicalNames RENAME TO ChemicalNames_Temp;",
      "CREATE TABLE ChemicalNames (Id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, Name TEXT NOT NULL, Namespace TEXT NOT NULL, Tag TEXT NOT NULL, ChemistryID INTEGER NOT NULL, FOREIGN KEY (ChemistryID) REFERENCES Gallery (Id), CONSTRAINT PK_ChemicalNames);",
      "INSERT INTO ChemicalNames (Name, Namespace, Tag, ChemistryID) SELECT Name, Namespace, Tag, ChemistryID FROM ChemicalNames_Temp;",
      "DROP TABLE ChemicalNames_Temp;"
    ]
  }
]